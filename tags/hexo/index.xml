<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hexo on Chuck</title>
    <link>https://xuchengpeng.github.io/tags/hexo/</link>
    <description>Recent content in Hexo on Chuck</description>
    <image>
      <url>https://xuchengpeng.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://xuchengpeng.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 01 Feb 2018 14:06:32 +0000</lastBuildDate><atom:link href="https://xuchengpeng.github.io/tags/hexo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 gulp 压缩 hexo 博客资源</title>
      <link>https://xuchengpeng.github.io/post/compress-hexo-with-gulp/</link>
      <pubDate>Thu, 01 Feb 2018 14:06:32 +0000</pubDate>
      
      <guid>https://xuchengpeng.github.io/post/compress-hexo-with-gulp/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://xuchengpeng.github.io/images/gulp.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;hexo generate&lt;/code&gt; 命令后在 public 文件夹下面生成 html、css、js 等源文件，里面含有大量的空白，而且博客中还有大量的图片占据了很大的空间。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Automate and enhance your workflow.
gulp is a toolkit for automating painful or time-consuming tasks in your development workflow, so you can stop messing around and build something.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://gulpjs.com/&#34;&gt;gulp&lt;/a&gt; 用自动化构建工具增强你的工作流程！&lt;/p&gt;
&lt;p&gt;我们可以通过一些 gulp 插件实现对html、css、js、image等静态资源的高效压缩，通过压缩这些静态资源，可以减少请求的数据量从而达到优化博客访问速度的目的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Travis CI 自动部署 Hexo 博客</title>
      <link>https://xuchengpeng.github.io/post/autodeploy-hexo-blog-with-travisci/</link>
      <pubDate>Tue, 30 Jan 2018 09:30:40 +0000</pubDate>
      
      <guid>https://xuchengpeng.github.io/post/autodeploy-hexo-blog-with-travisci/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://xuchengpeng.github.io/images/travis-ci.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;CI 是 &lt;code&gt;Continuous Integration&lt;/code&gt; 的缩写，持续集成之意。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;持续集成是一种软件开发实践，每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/&#34;&gt;Travis CI&lt;/a&gt; 是目前新兴的开源持续集成构建项目，用来构建托管在GitHub上的代码。它提供了多种编程语言的支持，包括Ruby，JavaScript，Java，Scala，PHP，Haskell和Erlang在内的多种语言。许多知名的开源项目使用它来在每次提交的时候进行构建测试，比如Ruby on Rails，Ruby和Node.js。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Travis CI是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在GitHub托管的代码。这个软件的代码同时也是开源的，可以在GitHub上下载到，尽管开发者当前并不推荐在闭源项目中单独使用它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;工作原理&#34;&gt;工作原理&lt;/h2&gt;
&lt;p&gt;当我们每次进行push等动作时，Travis CI 会自动检测我们的提交，然后根据配置文件，搭建虚拟主机来运行测试，构建等指令。在这里，就是运行 &lt;code&gt;hexo deploy --generate&lt;/code&gt; 等命令来自动生成、部署静态网页。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Hexo 数据文件进行主题配置</title>
      <link>https://xuchengpeng.github.io/post/theme-configuration-with-hexo-data-files/</link>
      <pubDate>Fri, 19 Jan 2018 07:41:32 +0000</pubDate>
      
      <guid>https://xuchengpeng.github.io/post/theme-configuration-with-hexo-data-files/</guid>
      <description>&lt;p&gt;目前，通过 pull 或下载新的 release 版本来更新 NexT 主题的体验并不平滑。当用户使用 git pull 更新 NexT 主题时经常需要解决冲突问题，而在手动下载 release 版本时也经常需要手动合并配置。&lt;/p&gt;
&lt;p&gt;现在来说，NexT 推荐用户存储部分配置在站点的 _config.yml 中，而另一部分在主题的 _config.yml 中。这一方式固然可用，但也有一些缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置项被分裂为两部分；&lt;/li&gt;
&lt;li&gt;用户难以弄清何处存放配置选项。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了解决这一问题，NexT 将利用 Hexo 的&lt;a href=&#34;https://hexo.io/docs/data-files.html&#34;&gt;数据文件&lt;/a&gt;特性。因为数据文件是在 Hexo 3 中被引入，所以你需要更新至 Hexo 3.0 以后的版本来使用这一特性。&lt;/p&gt;
&lt;p&gt;如果你仍然希望使用 Hexo 2.x，你依旧可以按老的方式进行配置。NexT 仍然兼容 Hexo 2.x（但可能会出现错误）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>搭建Hexo NexT主题博客</title>
      <link>https://xuchengpeng.github.io/post/setup-hexo-next-blog/</link>
      <pubDate>Tue, 09 Jan 2018 14:41:31 +0000</pubDate>
      
      <guid>https://xuchengpeng.github.io/post/setup-hexo-next-blog/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://xuchengpeng.github.io/images/NextSchemes3.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;什么是hexo&#34;&gt;什么是Hexo？&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt; 是一个快速、简洁且高效的博客框架。Hexo 使用 &lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt;（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/theme-next/hexo-theme-next&#34;&gt;NexT&lt;/a&gt; 是一款简洁优雅且易于使用的主题。&lt;/p&gt;
&lt;p&gt;在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。&lt;/p&gt;
&lt;p&gt;为了描述方便，在以下说明中，将前者称为 {% label primary@站点配置文件 %}， 后者称为 {% label info@主题配置文件 %}。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gitalk评论插件</title>
      <link>https://xuchengpeng.github.io/post/gitalk-comment-extension/</link>
      <pubDate>Fri, 24 Nov 2017 14:51:01 +0000</pubDate>
      
      <guid>https://xuchengpeng.github.io/post/gitalk-comment-extension/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/gitalk/gitalk&#34;&gt;Gitalk&lt;/a&gt; 是一个基于 Github Issue 和 Preact 开发的评论插件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NexT - Elegant Theme for Hexo</title>
      <link>https://xuchengpeng.github.io/post/hexo-next-blog/</link>
      <pubDate>Thu, 23 Nov 2017 09:38:00 +0000</pubDate>
      
      <guid>https://xuchengpeng.github.io/post/hexo-next-blog/</guid>
      <description>下一步，学习一下用这个东东搭建一个blog吧。
Hexo
NexT
其他教程：
http://www.jianshu.com/p/5973c05d7100
http://www.jianshu.com/p/e99ed60390a8</description>
    </item>
    
  </channel>
</rss>
