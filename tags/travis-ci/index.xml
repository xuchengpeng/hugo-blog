<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Travis CI on Chuck</title>
    <link>https://xuchengpeng.github.io/tags/travis-ci/</link>
    <description>Recent content in Travis CI on Chuck</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 02 Feb 2018 17:01:59 +0000</lastBuildDate><atom:link href="https://xuchengpeng.github.io/tags/travis-ci/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Travis CI 构建时自动更新 NexT 主题源码</title>
      <link>https://xuchengpeng.github.io/post/travisci-update-theme-next/</link>
      <pubDate>Fri, 02 Feb 2018 17:01:59 +0000</pubDate>
      
      <guid>https://xuchengpeng.github.io/post/travisci-update-theme-next/</guid>
      <description>&lt;p&gt;在 {% post_link autodeploy-hexo-blog-with-travisci 使用 Travis CI 自动部署 Hexo 博客 %} 后，每次新增文章或者修改文章就会触发自动构建。&lt;/p&gt;
&lt;p&gt;加入使用的主题代码更新，还需要手动合并后提交，如我的博客使用的是 NexT 主题，每天都有代码更新，所以还是想办法在构建的时候自动更新主题代码。&lt;/p&gt;
&lt;p&gt;初步想法是在下载的博客代码后，生成博客之前，再下载一次博客的最新代码即可，Travis CI 构建过程有很多阶段，选择其中一个阶段即可。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;OPTIONAL Install &lt;code&gt;apt addons&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;OPTIONAL Install &lt;code&gt;cache components&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;before_install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;before_script&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;script&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;OPTIONAL &lt;code&gt;before_cache&lt;/code&gt; (for cleaning up cache)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;after_success&lt;/code&gt; or &lt;code&gt;after_failure&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;OPTIONAL &lt;code&gt;before_deploy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;OPTIONAL &lt;code&gt;deploy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;OPTIONAL &lt;code&gt;after_deploy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;after_script&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>使用 Travis CI 自动部署 Hexo 博客</title>
      <link>https://xuchengpeng.github.io/post/autodeploy-hexo-blog-with-travisci/</link>
      <pubDate>Tue, 30 Jan 2018 09:30:40 +0000</pubDate>
      
      <guid>https://xuchengpeng.github.io/post/autodeploy-hexo-blog-with-travisci/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://xuchengpeng.github.io/images/travis-ci.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;CI 是 &lt;code&gt;Continuous Integration&lt;/code&gt; 的缩写，持续集成之意。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;持续集成是一种软件开发实践，每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/&#34;&gt;Travis CI&lt;/a&gt; 是目前新兴的开源持续集成构建项目，用来构建托管在GitHub上的代码。它提供了多种编程语言的支持，包括Ruby，JavaScript，Java，Scala，PHP，Haskell和Erlang在内的多种语言。许多知名的开源项目使用它来在每次提交的时候进行构建测试，比如Ruby on Rails，Ruby和Node.js。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Travis CI是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在GitHub托管的代码。这个软件的代码同时也是开源的，可以在GitHub上下载到，尽管开发者当前并不推荐在闭源项目中单独使用它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;工作原理&#34;&gt;工作原理&lt;/h2&gt;
&lt;p&gt;当我们每次进行push等动作时，Travis CI 会自动检测我们的提交，然后根据配置文件，搭建虚拟主机来运行测试，构建等指令。在这里，就是运行 &lt;code&gt;hexo deploy --generate&lt;/code&gt; 等命令来自动生成、部署静态网页。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
