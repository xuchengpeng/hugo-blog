<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>profiler on Chuck</title>
    <link>https://xuchengpeng.github.io/tags/profiler/</link>
    <description>Recent content in profiler on Chuck</description>
    <image>
      <url>https://xuchengpeng.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://xuchengpeng.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 30 Mar 2018 10:02:45 +0000</lastBuildDate><atom:link href="https://xuchengpeng.github.io/tags/profiler/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Emacs Native Profiler</title>
      <link>https://xuchengpeng.github.io/post/emacs-native-profiler/</link>
      <pubDate>Fri, 30 Mar 2018 10:02:45 +0000</pubDate>
      
      <guid>https://xuchengpeng.github.io/post/emacs-native-profiler/</guid>
      <description>&lt;p&gt;If your program is working correctly, but you want to make it run more quickly or efficiently, the first thing to do is profile your code so that you know how it is using resources. If you find that one particular function is responsible for a significant portion of the runtime, you can start looking for ways to optimize that piece.&lt;/p&gt;
&lt;p&gt;Emacs has built-in support for this. To begin profiling, type &lt;code&gt;M-x profiler-start&lt;/code&gt;. You can choose to profile by processor usage, memory usage, or both. After doing some work, type &lt;code&gt;M-x profiler-report&lt;/code&gt; to display a summary buffer for each resource that you chose to profile. The names of the report buffers include the times at which the reports were generated, so you can generate another report later on without erasing previous results. When you have finished profiling, type &lt;code&gt;M-x profiler-stop&lt;/code&gt; (there is a small overhead associated with profiling).&lt;/p&gt;
&lt;p&gt;The profiler report buffer shows, on each line, a function that was called, followed by how much resource (processor or memory) it used in absolute and percentage times since profiling started. If a given line has a ‘+’ symbol at the left-hand side, you can expand that line by typing &lt;!-- raw HTML omitted --&gt;, in order to see the function(s) called by the higher-level function. Use a prefix argument (&lt;!-- raw HTML omitted --&gt;) to see the whole call tree below a function. Pressing &lt;!-- raw HTML omitted --&gt; again will collapse back to the original state.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
